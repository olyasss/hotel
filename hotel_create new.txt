CREATE TABLE users (
  USER_ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  LOGIN VARCHAR(20) NOT NULL,
  PASSWORD VARCHAR(20) NOT NULL,
  EMAIL VARCHAR(20),
  NAME VARCHAR(20),
  SURNAME VARCHAR(20),
  PHONE VARCHAR(20),
  PRIMARY KEY (USER_ID) USING BTREE,
  UNIQUE KEY UNI_LOGIN (LOGIN)
);

CREATE TABLE price (
   TYPE_ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
   TYPE_ROOM VARCHAR(50) NOT NULL,
   COST INT(10),
   PRIMARY KEY (TYPE_ID)   
) 

CREATE TABLE rooms (
   ROOM_ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
   NUMBER INT(10) NOT NULL,
   FLOOR INT(10),
   TYPE_ID INT(10) UNSIGNED NOT NULL,
   DESCRIPTION VARCHAR(255),
   PRIMARY KEY (ROOM_ID) USING BTREE,
   UNIQUE KEY UNI_NUMBER (NUMBER),
   CONSTRAINT FK_ROOM_TYPE FOREIGN KEY (TYPE_ID) 
   REFERENCES price (TYPE_ID)
   ON DELETE CASCADE ON UPDATE CASCADE
)

DROP TABLE IF EXISTS booking;
CREATE TABLE booking(
   BOOK_ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
   USER_ID INT(10) UNSIGNED NOT NULL,
   ROOM_ID INT(10) UNSIGNED NOT NULL,
   DATE_FROM DATE NOT NULL,
   DATE_TO DATE NOT NULL,
   PASSPORT VARCHAR(30) NOT NULL,
   PRIMARY KEY (BOOK_ID) USING BTREE,
   CONSTRAINT FK_USER FOREIGN KEY (USER_ID)
   REFERENCES users (USER_ID)
   ON DELETE CASCADE ON UPDATE CASCADE,
   CONSTRAINT FK_ROOM FOREIGN KEY (ROOM_ID)
   REFERENCES rooms (ROOM_ID)
   ON DELETE CASCADE ON UPDATE CASCADE
)

